version: '3'

services:
    #Nginx Service
    nginx:
        image: nginx:alpine
        container_name: app_nginx
        ports:
            - "8080:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - mysql
        networks:
            - laravel

    #MySQL Service
    mysql:
        image: mysql:8.0.22
        container_name: task_mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: TASK_DB
            MYSQL_USER: homestead
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
        networks:
            - laravel

    #PHP Service
    php:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: app_php
        volumes:
            - .:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - laravel

    #COMPOSER Service
    composer:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: app_composer
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: [ '/usr/bin/composer' ]
        networks:
            - laravel

    #ARTISAN Service
    artisan:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: app_artisan
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel

#Docker Networks
networks:
    laravel:

#Volumes
volumes:
    dbdata:
        driver: local
